import os
import pandas as pd
from openpyxl import load_workbook

# Define the paths to your files and folders
analysed_data_folder = "path_to/Analysed Data"
raw_data_folder = "path_to/Raw Data"
vtm_file_path = os.path.join(analysed_data_folder, "VTM-SCA-Licenses.xlsx")
maven_file_path = [f for f in os.listdir(raw_data_folder) if f.startswith("Maven_") and f.endswith("License_Export.csv")]
spdx_file_path = "path_to/spdx-license.xlsx"

# Check if Maven file exists
if not maven_file_path:
    raise FileNotFoundError("Maven_*_License_Export.csv file not found in Raw Data folder.")
maven_file_path = os.path.join(raw_data_folder, maven_file_path[0])

# Load the data from the files
vtm_df = pd.read_excel(vtm_file_path)
maven_df = pd.read_csv(maven_file_path)
spdx_df = pd.read_excel(spdx_file_path)

# Step 1: Fill "Vulnerable Component" and "Impacted component Version"
vtm_df["Vulnerable Component"] = maven_df["Component Name"]
vtm_df["Impacted component Version"] = maven_df["Licenses"]

# Step 2: Use Excel formulas to fill in the rest of the columns
workbook = load_workbook(vtm_file_path)
sheet = workbook.active

# Define the column positions
columns_to_fill = {
    "Component Description": "Description",
    "Recommendation": "isAllowed",
    "Security": "Severity",
    "Risk Reason": "Risk associated with use of library"
}

# Create formulas to fetch data from the spdx-license file
for index, row in vtm_df.iterrows():
    license_names = row["Impacted component Version"].split(",")
    severity_values = []
    recommendation = "Allowed"
    description = ""
    risk_reason = ""
    
    for license_name in license_names:
        # Use a formula to fetch data from spdx-license.xlsx
        match_formula = f"VLOOKUP(\"{license_name}\", 'spdx-license.xlsx'!A:E, {{col}}, FALSE)"
        description = match_formula.replace("{col}", "3")  # Fetch from the 3rd column
        is_allowed = match_formula.replace("{col}", "4")  # Fetch from the 4th column
        severity = match_formula.replace("{col}", "5")  # Fetch from the 5th column
        risk_reason = match_formula.replace("{col}", "6")  # Fetch from the 6th column
        
        # Check if any license is disallowed
        if "Disallowed" in is_allowed:
            recommendation = "Disallowed"
        
        # Collect severity values
        severity_values.append(severity)

    # Fill the Excel sheet using the formulas
    sheet[f"C{index + 2}"] = description
    sheet[f"D{index + 2}"] = recommendation
    sheet[f"E{index + 2}"] = max(severity_values)  # Choose the highest severity
    sheet[f"F{index + 2}"] = "N/A"  # Tester Comments
    sheet[f"G{index + 2}"] = risk_reason
    sheet[f"H{index + 2}"] = "N/A"  # Component Physical Path
    sheet[f"I{index + 2}"] = "Application Team"  # Remediation Responsibility

# Save the updated workbook
workbook.save(vtm_file_path)
print("Data successfully populated in VTM-SCA-Licenses.xlsx.")
